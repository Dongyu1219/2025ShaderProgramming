Git 과 Github의 차이
Git : 오픈 소스 프로젝트
	
	
Github : 그 오픈 소스를 사용하기 쉽게 GUI를 제공하고 
	레파지토리를 제공하는 서비스를 해주는 서비스 업체 ( 플래폼 업체 )
Gitlab


===========================================
Git 기초 
	- 저장소 전부가 복제
		저장소의 일부를 가져오는 것이 아니라 
		그 저장소의 전부를 가져온다. ( 쌍둥이 생성 ) 
		정보를 받아올때 히스토리, 브랜치까지 전부 긁어온다.
		( git clone )
	
	Git이 생긴 이유 
		리눅스 개발을 위한(오픈소스 ) 프로젝트였다. 

	이때 
	장점 : 서버가 날라가도 복구가 쉽다 ( 마지막으로 clone한 pc찾으면 끝). 

해당 되는 파일이 가지고 있는 해시(포인터)들을 트리형태로 가지고 있다. 
실제 파일을 가지고 있는 것이 아니라 포인터들만 가지고 있따. ( snapshot)

대부분 로컬에서 실행된다. 

중요 : 데이터 삭제 불가
	모든 변화는 데이터를 추가함으로서 이루어짐.
		깃은 내용을 변경하면 그 전체를 저장하는 것이 아니라
		 최대한 변화된 놈만 저장할려고 노력한다.  

commit 은 로컬에만 잇다. push를 하는 순간 삭제가 안된다. 


vim a.txt    : 텍스트 문서 만들기
i
esc
:w
:q
:q!

cat a.txt   : 텍스트 문서 읽기

===================================================
p8 그림 이해하기 
	저장공간은 3가지의 종류가 있다. 
	프로젝트 하나당 working directory 는 하나쓰도록 노력하자
	중간에 staging Area에 올린다. 
	git add ==> staging Area 에 올린다. 
	git commit ==> git repository 에 올리는 것이다. 
	
	브랜치 이동할 때 check out 사용한다. 
		재구성 

	빨간색 : working directory 와 staging area 가 다르다. 
	초록색 : staging area가 working과는 동일하지만  
		git directory (repository)와 다르다.

=======================================================
p.15
	commit 하면 이제 그 파일은 unmodified 되어 있는 것이다.	



git -- cached or staged
==================================================
파일 삭제하기
	깃은 변화를 기록한다. 

	
====================2차시=========================
==================================================

Working Directory 의 기반이 되는 Commit Id 가 헤드!!

특정 버전으로 가고싶다 ==> Head를 옮긴다. (특정 snapshot 으로 Working directory를 옮긴다.)

깃 브랜치 : 커밋 ID 하나만 딸랑 들고있는 녀석

브랜치를 이동하는 명령어 : check out (Head를 옮긴다. 

git checkout testing
==========================================
시험 : 브랜치의 개념을 잘 알고있는지 
	checkout
	순차적으로 실행한다. 중간에 checkout 이 있고 별게다잇을때
	(checkout 실패 가능 --> 원래 브랜치가 자라난다. ) 
	풀기

local에서 진행되는 병합 등등 

remote는 이상한 문제 안나옴. 

==============================================
overwrite나 삭제 될 수 있는 상황에는 checkout 이 안된다. 

push 로컬 리포지토리와 remote 리포지토리를 merge
pull remote 리포지토리와 로컬 리포지토리를 merge


merge [이름]: [이름] 브랜치에 있는 내용을 내 브랜치에 합쳐라.


마지막 페이지 회색 : 삭제 ( 3-way merge ) 
merge 




































	